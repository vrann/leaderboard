var member = {
        getCreateObject: function(data, updateData, config) {
            console.log(data.login);
            if (!data.hasOwnProperty('prs')) {
                data.prs = []
            }
            if (!data.hasOwnProperty('teams')) {
                data.teams = []
            }
            updateObject  = this.getUpdateObject(data, updateData, config)
            Object.keys(updateObject).map(function(key, index) {
                data[key] = updateObject[key];
            });
            return data
        },

        getUpdateObject: function(document, updateData, config) {
            updateObject = {}
            if (updateData.hasOwnProperty('prs')) {
                prs = document.hasOwnProperty('prs') ? document.prs : [];
                updateData.prs.map(function(pr) {
                    if (!prs.find(function(element) {return element == pr})) {
                        prs.push(pr);
                        updateObject.prs = prs;
                    }
                })
            }

            if (updateData.hasOwnProperty('teams')) {
                teams = document.hasOwnProperty('teams') ? document.teams : [];
                updateData.teams.map(function(team) {
                    if (!teams.find(function(element) {return element.id == team.id})) {
                        teams.push(team);
                        updateObject.teams = teams;
                    }
                })
            }
            return updateObject;
        }
}

module.exports = member;