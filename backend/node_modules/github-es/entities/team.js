var member = {
        getCreateObject: function(data, updateData, config) {
            //console.log(data, updateData)
            updateObject  = this.getUpdateObject(data, updateData, config)
            
            // Object.keys(updateData).map(function(key, index) {
            //     data[key] = updateData[key];
            // });
            // console.log(updateObject)
            Object.keys(updateObject).map(function(key, index) {
                data[key] = updateObject[key];
            });
            
            //console.log('updateData', updateData)
            //console.log('updateObject', updateObject)
            //console.log('data', data)
            return data
        },

        getUpdateObject: function(document, updateData, config) {
            updateObject = {}
            Object.keys(updateData).map(function(key, index) {
                switch (key) {
                    case 'members':
                        members = document.hasOwnProperty('members') ? document.members : [];
                        updateData.members.map(function(memberId){
                            if (!members.find(function(element) {return element == memberId})) {
                                members.push(memberId);
                            }
                        });
                        updateObject.members = members;
                        break;
                    case 'description':
                        var regex = /.*Link:\s(.*)\./;
                        var parsed = regex.exec(updateData.description)
                        if (parsed !== null && parsed.length > 1) {
                            //console.log(parsed[1])
                            updateObject.link = parsed[1]    
                        } else {
                            updateObject.link = null
                        }
                        break; 
                    default:
                        updateObject[key] = updateData[key];
                        break;
                }
            })
            return updateObject;
        }
}

module.exports = member;